# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy using ssh
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.ADMINNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            cd PetWeb
            git config --global user.email ${{ secrets.EMAIL }}
            git config --global user.name ${{ secrets.USERNAME }}
            git pull origin main
            git status

  copy:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Deploy using ssh
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.ADMINNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            cd PetWeb

            # Проверка npm
            if ! command -v npm >/dev/null 2>&1; then
              echo "❌ npm is not installed"
              exit 1
            fi

            # Переход в директорию и запуск npm скрипта (правильный синтаксис)
            cd html/miki
            node generateFiles  # Используем 'npm run' для запуска скриптов
            cd ../..

            # Проверяем и перемещаем html директорию (с проверкой на перезапись)
            if [ -d "html" ]; then
              # Создаем backup или удаляем существующую директорию
              sudo rm -rf /var/www/html.backup 2>/dev/null || true
              sudo cp -r -f /var/www/html /var/www/html.backup 2>/dev/null || true
              sudo cp -r -f html/ /var/www/
              echo "✅ html directory moved successfully"
            else
              echo "❌ Error: html directory not found"
              exit 1
            fi

            # Проверяем и перемещаем nginx.conf файл (не директорию!)
            if [ -f "nginx.conf" ]; then  # Используем -f для файла, а не -d для директории
              # Создаем backup существующего конфига
              sudo cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.backup 2>/dev/null || true
              sudo cp -f nginx.conf /etc/nginx/
              echo "✅ nginx.conf moved successfully"
            else
              echo "❌ Error: nginx.conf file not found"
              exit 1
            fi

            # Проверка конфигурации nginx
            if sudo nginx -t; then
              echo "✅ Nginx configuration test passed, reloading..."
              sudo systemctl reload nginx
              echo "✅ Nginx reloaded successfully"
            else
              echo "❌ Nginx configuration test failed!"
              # Восстанавливаем backup конфига
              sudo cp -f /etc/nginx/nginx.conf.backup /etc/nginx/nginx.conf 2>/dev/null || true
              exit 1
            fi
